/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

/*
* &lt { quick_tap_ms = <220>; };
* &mt { quick_tap_ms = <220>; };
 */

&lt {
    quick_tap_ms = <220>;
    require-prior-idle-ms = <150>;
    flavor = "balanced";
    tapping-term-ms = <280>;
};

&mt {
    quick_tap_ms = <220>;
    tapping-term-ms = <280>;
    require-prior-idle-ms = <150>;
    flavor = "balanced";
};

/ {
};

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        x {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <8 9>;
        };

        q {
            bindings = <&kp SQT>;
            key-positions = <18 19>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <29 28>;
        };

        togglemouse {
            bindings = <&tog 4>;
            key-positions = <7 6 8>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------
            //|  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | 
            //|  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            //|  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            //            | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&kp Q  &kp W  &kp E         &kp R         &kp T    &kp Y  &kp U              &kp I        &kp O      &kp P
&kp A  &kp S  &kp D         &kp F         &kp G    &kp H  &kp J              &kp K        &kp L      &kp SEMI
&kp Z  &kp X  &kp C         &kp V         &kp B    &kp N  &kp M              &kp COMMA    &kp DOT    &kp FSLH
              &kp LEFT_GUI  &kp LEFT_ALT  &kp TAB         &lt LWR BACKSPACE  &lt 2 SPACE  &kp ENTER
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            //|  *  |  7 |  8  |  9  |  +  |    |  !  |  @  |  #  |  $  |  %  |
            //|  /  |  4 |  5  |  6  |  -  |    |  ^  |  &  |  *  |  (  |  )  |
            //|  0  |  1 |  4  |  3  |  .  |    |  ls |  F4 |  F5 |  F6 |  F7 |
            //                 | ADJ | ___ | ___ |    | ___ | ___ | ADJ |

            bindings = <
&kp UNDERSCORE   &kp TILDE    &kp F3    &kp F4      &kp PLUS     &kp MINUS     &kp EQUAL  &kp GRAVE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT  &kp CARET     &kp AMPS   &kp STAR   &kp LPAR          &kp RPAR
&kp N0           &kp N1       &kp N2    &kp N3      &kp N5       &kp NUMBER_6  &kp N7     &kp N8     &kp N9            &kp N0
                              &trans    &trans      &lt 3 TAB                  &trans     &trans     &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            //| VOLU  |  PGUP  | PLAY | HOME | ___  |            | ___  | HOME | PLAY| PGUP | VOLU |
            //| VOLD  |  LEFT  |  UP  | DOWN | RGHT |            | RGHT | DOWN | UP  | LEFT | VOLD | 
            //| MUTE  |  PGDN  |  ___ | END  | ___  |            | ___  | END  | ___ | PGDN | MUTE |
            //                  | ___ | ___  | ADJ  |            | ADJ  | ___  | ___ |

            bindings = <
&none     &none  &kp END  &none      &none     &none             &none     &kp LS(LA(N5))  &none              &kp UP
&kp HOME  &none  &kp DEL  &kp RIGHT  &none     &kp LA(LC(LEFT))  &none     &none           &kp LA(LC(RIGHT))  &none
&none     &none  &none    &none      &kp LEFT  &kp DOWN          &kp HOME  &none           &none              &studio_unlock
                 &trans   &trans     &none                       &none     &trans          &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            //|     |     |     |     |     |   |     |     |     |     |     |
            //| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 |
            //|NUMLK|     |     |     |     |   |     |     |     |     |     |
            //            |     |     |     |   |     |     |     |

            bindings = <
&bt BT_CLR    &none         &none         &none         &none         &out OUT_BLE  &out OUT_USB  &out OUT_TOG  &none   &bt BT_CLR
&none         &none         &none         &none         &none         &none         &none         &none         &none   &none
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none         &none         &none         &none   &ext_power EP_OFF
                            &trans        &none         &trans                      &trans        &none         &trans
            >;
        };

        mouse {
            bindings = <
&none           &mkp MB1        &msc SCRL_UP    &mkp MB2         &none  &none  &mkp MB1        &mmv MOVE_UP    &mkp MB2         &msc SCRL_UP
&kp LCTRL       &msc SCRL_LEFT  &mkp MCLK       &msc SCRL_RIGHT  &none  &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN
&kp LEFT_SHIFT  &none           &msc SCRL_DOWN  &none            &none  &none  &msc SCRL_LEFT  &mkp MB3        &msc SCRL_RIGHT  &mkp MB3
                                &none           &none            &none         &mkp MB1        &mkp MB2        &mkp MB3
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans          &trans  &trans  &trans
            >;
        };
    };
};
